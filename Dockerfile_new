FROM andrewosh/binder-base
USER root
RUN apt-get update
RUN apt-get install -y build-essential
RUN apt-get install --yes g++ cpp gcc gfortran git dpkg-dev make binutils libx11-dev libxpm-dev libxft-dev libxext-dev \
                              libssl-dev libpcre3-dev xlibmesa-glu-dev libglew1.5-dev libftgl-dev libmysqlclient-dev \
                              libfftw3-dev graphviz-dev libavahi-compat-libdnssd-dev libldap2-dev python-dev \
                              libxml2-dev libkrb5-dev libgsl0-dev libqt4-dev libx11-dev libxpm-dev
RUN apt-get install -y bzr
RUN mkdir /code


### INSTALL MADGRAPH

WORKDIR /code
RUN bzr branch lp:~maddevelopers/mg5amcnlo/2.3.3 madgraph-2.3.3
RUN ln -s $PWD/madgraph-2.3.3/bin/mg5_aMC /usr/local/bin && \
    ln -s $PWD/madgraph-2.3.3/bin/mg5 /usr/local/bin

### INSTALL HEPMC

RUN curl http://lcgapp.cern.ch/project/simu/HepMC/download/HepMC-2.06.09.tar.gz | tar -xzvf -
WORKDIR HepMC-2.06.09
RUN ./configure --with-momentum=GEV --with-length=MM --prefix /usr/local && \
    make -j4 && \
    make install

### INSTALL PYTHIA

WORKDIR /code
RUN curl http://home.thep.lu.se/~torbjorn/pythia8/pythia8215.tgz|tar -xzvf -
WORKDIR pythia8215
RUN ./configure --with-hepmc2=/usr/local  --enable-shared --enable-64bit --prefix=/usr/local && \
    make -j4 && \
    make install
RUN chmod +x /usr/local/bin/pythia8-config
RUN echo "/usr/local/lib" >> /etc/ld.so.conf.d/local.conf
RUN ldconfig
WORKDIR /code
RUN cp ./pythia8215/examples/main42.cc example_main.cc
RUN  g++ -O2 -ansi -pedantic -ldl -W -Wall -Wshadow -m64 -Wno-shadow \
     `pythia8-config --cxxflags` example_main.cc -o example_main \
     `pythia8-config --libs --hepmc|sed 's|\-lhepmcinterface||'`  \
     -L`pythia8-config --libdir`/archive

RUN apt-get install -y wget libpng-dev
RUN echo "install pythia-pgs" > install_madgraph_cmd && mg5_aMC -f install_madgraph_cmd

### INSTALL ROOT

ENV ROOTSYS /usr/local
RUN git clone --quiet http://root.cern.ch/git/root.git /code/root-v6-04-14 &&\
    cd  /code/root-v6-04-14 &&\
    git checkout v6-04-14 &&\
     ./configure \
     --all \
     --with-x11-libdir=/usr/lib/x86_64-linux-gnu \
     --with-xpm-libdir=/usr/lib/x86_64-linux-gnu \
     --with-xft-libdir=/usr/lib/x86_64-linux-gnu \
     --with-xext-libdir=/usr/lib/x86_64-linux-gnu &&\
    make -j4 &&\
    make -j4 install


### INSTALL DELPHES

RUN git clone https://github.com/delphes/delphes.git
RUN bash -c 'source /usr/local/bin/thisroot.sh && cd delphes && make -j4'


### SET SOME FINAL ENV VARS

ENV MANPATH /usr/local/man
ENV LD_LIBRARY_PATH=/code/delphes:/usr/local/lib
ENV LIBPATH /usr/local/lib
ENV PATH /code/delphes:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin
ENV PYTHONPATH /code/delphes/python:/usr/local/lib
